{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/repositories/password.service\";\nexport let PasswordDetailsComponent = /*#__PURE__*/(() => {\n  class PasswordDetailsComponent {\n    constructor(passwordService) {\n      this.passwordService = passwordService;\n      this.encryptedPassword = '';\n      this.decryptedPassword = undefined;\n      this.isPasswordEncrypted = true;\n      this.password = {\n        id: -1,\n        passwordText: '',\n        webAdderss: '',\n        description: '',\n        login: ''\n      };\n      this.signInData = {\n        login: '',\n        password: ''\n      };\n      this.deletePasswordEvent = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.encryptedPassword = this.password.passwordText;\n    }\n\n    switchPasswordEncryption() {\n      if (this.isPasswordEncrypted) {\n        if (this.decryptedPassword !== undefined) {\n          this.password.passwordText = this.decryptedPassword;\n          this.isPasswordEncrypted = !this.isPasswordEncrypted;\n        } else {\n          this.fetchPassword();\n        }\n      } else {\n        this.password.passwordText = this.encryptedPassword;\n        this.isPasswordEncrypted = !this.isPasswordEncrypted;\n      }\n    }\n\n    fetchPassword() {\n      this.passwordService.fetchPassword(this.password.id).subscribe(password => {\n        this.password.passwordText = password.passwordText;\n        this.decryptedPassword = password.passwordText;\n        this.isPasswordEncrypted = false;\n      });\n    }\n\n    deletePassword() {\n      this.passwordService.deletePassword(this.password.id).subscribe(result => {\n        this.deletePasswordEvent.emit(this.password);\n      });\n    }\n\n  }\n\n  PasswordDetailsComponent.ɵfac = function PasswordDetailsComponent_Factory(t) {\n    return new (t || PasswordDetailsComponent)(i0.ɵɵdirectiveInject(i1.PasswordService));\n  };\n\n  PasswordDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PasswordDetailsComponent,\n    selectors: [[\"password-details\"]],\n    inputs: {\n      password: \"password\",\n      signInData: \"signInData\"\n    },\n    outputs: {\n      deletePasswordEvent: \"deletePasswordEvent\"\n    },\n    decls: 6,\n    vars: 5,\n    consts: [[\"type\", \"button\", 3, \"click\"]],\n    template: function PasswordDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function PasswordDetailsComponent_Template_button_click_0_listener() {\n          return ctx.switchPasswordEncryption();\n        });\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function PasswordDetailsComponent_Template_button_click_2_listener() {\n          return ctx.deletePassword();\n        });\n        i0.ɵɵtext(3, \"Delete\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"label\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.isPasswordEncrypted ? \"Decrypt\" : \"Encrypt\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate4(\"Web adderss: \", ctx.password.webAdderss, \" Login: \", ctx.password.login, \" Password: \", ctx.password.passwordText, \" Description \", ctx.password.description, \"\");\n      }\n    }\n  });\n  return PasswordDetailsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}