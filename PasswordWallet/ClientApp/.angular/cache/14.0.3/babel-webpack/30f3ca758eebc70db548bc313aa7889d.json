{"ast":null,"code":"import { APIURL, AUTHSTR } from '../settings';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PasswordService = /*#__PURE__*/(() => {\n  class PasswordService {\n    constructor(http, baseUrl) {\n      this.http = http;\n      this.baseUrl = baseUrl;\n    }\n\n    fetchPasswords() {\n      var headers = {\n        'Authorization': 'Basic ' + localStorage.getItem(AUTHSTR)\n      };\n      return this.http.get(APIURL + 'Password', {\n        headers\n      });\n    }\n\n    fetchPassword(passwordId) {\n      var headers = {\n        'Authorization': 'Basic ' + localStorage.getItem(AUTHSTR)\n      };\n      return this.http.get(APIURL + 'Password/' + passwordId, {\n        headers\n      });\n    }\n\n    createPassword(command) {\n      var headers = {\n        'Authorization': 'Basic ' + localStorage.getItem(AUTHSTR)\n      };\n      return this.http.post(APIURL + 'Password', command, {\n        headers\n      });\n    }\n\n    updatePassword(passwordId, command) {\n      var headers = {\n        'Authorization': 'Basic ' + localStorage.getItem(AUTHSTR)\n      };\n      return this.http.put(APIURL + 'Password/' + passwordId, command, {\n        headers\n      });\n    }\n\n    deletePassword(passwordId) {\n      var headers = {\n        'Authorization': 'Basic ' + localStorage.getItem(AUTHSTR)\n      };\n      let https = APIURL + 'Password/' + passwordId;\n      return this.http.delete(https, {\n        headers\n      });\n    }\n\n  }\n\n  PasswordService.ɵfac = function PasswordService_Factory(t) {\n    return new (t || PasswordService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n  };\n\n  PasswordService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PasswordService,\n    factory: PasswordService.ɵfac,\n    providedIn: 'root'\n  });\n  return PasswordService;\n})();","map":null,"metadata":{},"sourceType":"module"}