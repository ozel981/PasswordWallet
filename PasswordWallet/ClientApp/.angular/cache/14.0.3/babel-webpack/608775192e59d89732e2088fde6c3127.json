{"ast":null,"code":"import { APIURL, AUTHSTR } from '../settings';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http, baseUrl) {\n      this.http = http;\n      this.baseUrl = baseUrl;\n    }\n\n    signIn(signInData) {\n      let data = signInData.login + ':' + signInData.password;\n\n      var Buffer = require('buffer/').Buffer;\n\n      var encodedAuthStr = Buffer.from(data).toString('base64');\n      var headers = {\n        'Authorization': 'Basic ' + encodedAuthStr\n      };\n      var result = this.http.post(APIURL + 'User/signIn', {\n        login: signInData.login\n      }, {\n        headers\n      });\n      result.subscribe(userId => {\n        localStorage.setItem(AUTHSTR, encodedAuthStr);\n      });\n      return result;\n    }\n\n    createUser(command) {\n      var Buffer = require('buffer/').Buffer;\n\n      var result = this.http.post(APIURL + 'User', command);\n      result.subscribe(userId => {\n        let data = command.login + ':' + command.password;\n        var encodedAuthStr = Buffer.from(data).toString('base64');\n        localStorage.setItem(AUTHSTR, encodedAuthStr);\n      });\n      return result;\n    }\n\n    changePassword(signInData, command) {\n      let data = signInData.login + ':' + signInData.password;\n      let newData = signInData.login + ':' + command.password;\n\n      var Buffer = require('buffer/').Buffer;\n\n      var encodedAuthStr = Buffer.from(data).toString('base64');\n      var newEncodedAuthStr = Buffer.from(newData).toString('base64');\n      var headers = {\n        'Authorization': 'Basic ' + encodedAuthStr\n      };\n      var result = this.http.put(APIURL + 'User/changePassword', command, {\n        headers\n      });\n      result.subscribe(response => {\n        localStorage.setItem(AUTHSTR, newEncodedAuthStr);\n      });\n      return result;\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}